import logging
import json
from telegram import Update, WebAppInfo, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logger = logging.getLogger(__name__)

# –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞ (–†–ï–ö–û–ú–ï–ù–î–£–ï–¢–°–Ø –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å os.environ –∏–ª–∏ .env —Ñ–∞–π–ª)
TOKEN = "7978464693:AAHfahvoHcalAmK17Op05OVY-2o8IMbXLxY"

# URL –≤–∞—à–µ–≥–æ Web App
WEB_APP_URL = "https://your-bot-market.vercel.app/"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π –¥–ª—è –æ—Ç–∫—Ä—ã—Ç–∏—è Web App."""
    keyboard = InlineKeyboardMarkup([[
        InlineKeyboardButton(
            text="üéÅ –û—Ç–∫—Ä—ã—Ç—å –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å",
            web_app=WebAppInfo(url=WEB_APP_URL)
        )
    ]])
    await update.message.reply_text(
        "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å –ø–æ–¥–∞—Ä–∫–æ–≤!",
        reply_markup=keyboard
    )

async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –¥–∞–Ω–Ω—ã–µ, –ø–æ–ª—É—á–µ–Ω–Ω—ã–µ –∏–∑ Web App."""
    try:
        data = json.loads(update.effective_message.web_app_data.data)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ –∏–∑ Web App: {data}")

        if data.get("type") == "order_completed":
            await update.effective_message.reply_text(
                f"üéâ –ó–∞–∫–∞–∑ –Ω–∞ {data['total']} –∑–≤—ë–∑–¥ —É—Å–ø–µ—à–Ω–æ –æ—Ñ–æ—Ä–º–ª–µ–Ω!\n"
                f"–û—Å—Ç–∞—Ç–æ–∫ –Ω–∞ —Å—á–µ—Ç—É: {data['balance']} ‚≠ê"
            )
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ Web App –¥–∞–Ω–Ω—ã—Ö: {e}")
        await update.effective_message.reply_text("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –¥–∞–Ω–Ω—ã—Ö.")

def main() -> None:
    """–ó–∞–ø—É—Å–∫ –±–æ—Ç–∞."""
    application = Application.builder().token(TOKEN).build()

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥
    application.add_handler(CommandHandler("start", start))

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
    application.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))

    # –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
    application.run_polling()

if __name__ == "__main__":
    main()
